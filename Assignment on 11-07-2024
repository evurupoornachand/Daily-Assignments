Creating a DATABASE
--------------------

CREATE DATABASE SchoolDB;

USE SchoolDB;

CREATE TABLE Student (
    id INT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(100),
    age INT,
    gender VARCHAR(10),
    marks INT
);
--------------------------------------------

Connection for JDBC
--------------------

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;

public class DatabaseConnection {
    private static final String URL = "jdbc:mysql://localhost:3306/SchoolDB";
    private static final String USER = "root"; 
    private static final String PASSWORD = "password"; 

    public static Connection getConnection() {
        Connection connection = null;
        try {
            connection = DriverManager.getConnection(URL, USER, PASSWORD);
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return connection;
    }
}
-----------------------------------------------------------------------------------------

open the connection with this database from a java application.

perform the following operation â€”

import java.sql.*;
import java.util.Scanner;

public class StudentOperations {
    public static void main(String[] args) {
        try (Connection connection = DatabaseConnection.getConnection()) {
            if (connection != null) {
                Scanner scanner = new Scanner(System.in);

                // 1. Add 3 students
                for (int i = 0; i < 3; i++) {
                    System.out.println("Enter student name: ");
                    String name = scanner.nextLine();
                    System.out.println("Enter student age: ");
                    int age = scanner.nextInt();
                    System.out.println("Enter student gender: ");
                    String gender = scanner.next();
                    System.out.println("Enter student marks: ");
                    int marks = scanner.nextInt();
                    scanner.nextLine(); 

                    String insertSQL = "INSERT INTO Student (name, age, gender, marks) VALUES (?, ?, ?, ?)";
                    try (PreparedStatement pstmt = connection.prepareStatement(insertSQL)) {
                        pstmt.setString(1, name);
                        pstmt.setInt(2, age);
                        pstmt.setString(3, gender);
                        pstmt.setInt(4, marks);
                        pstmt.executeUpdate();
                    }
                }

                // 2. Update the marks of student whose id is 2
                System.out.println("Enter new marks for student with id 2: ");
                int newMarks = scanner.nextInt();
                String updateSQL = "UPDATE Student SET marks = ? WHERE id = 2";
                try (PreparedStatement pstmt = connection.prepareStatement(updateSQL)) {
                    pstmt.setInt(1, newMarks);
                    pstmt.executeUpdate();
                }

                // 3. Get all students who have marks greater than 350
                String selectSQL = "SELECT * FROM Student WHERE marks > 350";
                try (Statement stmt = connection.createStatement();
                     ResultSet rs = stmt.executeQuery(selectSQL)) {
                    while (rs.next()) {
                        System.out.println("ID: " + rs.getInt("id") +
                                           ", Name: " + rs.getString("name") +
                                           ", Age: " + rs.getInt("age") +
                                           ", Gender: " + rs.getString("gender") +
                                           ", Marks: " + rs.getInt("marks"));
                    }
                }

                // 4. Delete the student with id 3
                String deleteSQL = "DELETE FROM Student WHERE id = 3";
                try (PreparedStatement pstmt = connection.prepareStatement(deleteSQL)) {
                    pstmt.executeUpdate();
                }
            } else {
                System.out.println("Failed to make connection!");
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
}
------------------------------------------------------------------------------------------------------
